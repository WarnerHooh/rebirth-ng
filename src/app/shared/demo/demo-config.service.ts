import { Injectable, Type } from '@angular/core';
import {
  AccordionDemoComponent,
  ActionButtonDemoComponent,
  AlertBoxDemoComponent,
  AutoCompleteDemoComponent,
  BadgeDemoComponent,
  CarouselDemoComponent,
  DataTableDemoComponent,
  DatePickerDemoComponent,
  DialogDemoComponent,
  DraggableDemoComponent,
  FileUploadDemoComponent,
  FlowStepDemoComponent,
  InfiniteScrollDemoComponent,
  MenuBarDemoComponent,
  ModalDemoComponent,
  OverlayDemoComponent,
  PagerDemoComponent,
  PaginationDemoComponent,
  PanelDemoComponent,
  PopoverDemoComponent,
  ProgressBarDemoComponent,
  RatingDemoComponent,
  SelectButtonDemoComponent,
  SwitchDemoComponent,
  TabsDemoComponent,
  TooltipDemoComponent,
  RadioGroupDemoComponent,
  CheckboxGroupDemoComponent,
  ValidatorsDemoComponent,
  NotifyDemoComponent,
  TreeViewDemoComponent,
  BreadcrumbsDemoComponent,
  TimePickerDemoComponent,
  EllipsisDemoComponent,
  TagsDemoComponent,
  ImageUploadDemoComponent,
  SelectDemoComponent,
  SliderDemoComponent,
  ButtonDemoComponent,
  InputDemoComponent,
  // component import
} from '../../demo';

@Injectable()
export class DemoConfigService {

  gettingStarted = {
    readMe: require('!html-loader!markdown-loader!../../README.md')
  };

  components: { name: string, cmp: Type<any>, directory?: string, readMe?: any, html?: string, ts?: string, data?: any }[] = [
    {
      name: 'Modal',
      directory: 'modal',
      cmp: ModalDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/modal/README.md'),
      html: require('!raw-loader!../../demo/modal/modal-demo.component.html'),
      ts: require('!raw-loader!../../demo/modal/modal-demo.component.ts'),
    },
    {
      name: 'Dialog',
      directory: 'dialog',
      cmp: DialogDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/dialog/README.md'),
      html: require('!raw-loader!../../demo/dialog/dialog-demo.component.html'),
      ts: require('!raw-loader!../../demo/dialog/dialog-demo.component.ts'),
    },
    {
      name: 'AlertBox',
      directory: 'alert-box',
      cmp: AlertBoxDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/alert-box/README.md'),
      html: require('!raw-loader!../../demo/alert-box/alert-box-demo.component.html'),
      ts: require('!raw-loader!../../demo/alert-box/alert-box-demo.component.ts'),
    },
    {
      name: 'Badge',
      directory: 'badge',
      cmp: BadgeDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/badge/README.md'),
      html: require('!raw-loader!../../demo/badge/badge-demo.component.html'),
      ts: require('!raw-loader!../../demo/badge/badge-demo.component.ts'),
    },
    {
      name: 'Pagination',
      directory: 'pagination',
      cmp: PaginationDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/pagination/README.md'),
      html: require('!raw-loader!../../demo/pagination/pagination-demo.component.html'),
      ts: require('!raw-loader!../../demo/pagination/pagination-demo.component.ts'),
    },
    {
      name: 'Pager',
      directory: 'pager',
      cmp: PagerDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/pager/README.md'),
      html: require('!raw-loader!../../demo/pager/pager-demo.component.html'),
      ts: require('!raw-loader!../../demo/pager/pager-demo.component.ts'),
    },
    {
      name: 'Panel',
      directory: 'panel',
      cmp: PanelDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/panel/README.md'),
      html: require('!raw-loader!../../demo/panel/panel-demo.component.html'),
      ts: require('!raw-loader!../../demo/panel/panel-demo.component.ts'),
    },
    {
      name: 'Accordion',
      directory: 'accordion',
      cmp: AccordionDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/accordion/README.md'),
      html: require('!raw-loader!../../demo/accordion/accordion-demo.component.html'),
      ts: require('!raw-loader!../../demo/accordion/accordion-demo.component.ts'),
    },
    {
      name: 'ActionButton',
      directory: 'action-button',
      cmp: ActionButtonDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/action-button/README.md'),
      html: require('!raw-loader!../../demo/action-button/action-button-demo.component.html'),
      ts: require('!raw-loader!../../demo/action-button/action-button-demo.component.ts'),
    },
    {
      name: 'Rating',
      directory: 'rating',
      cmp: RatingDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/rating/README.md'),
      html: require('!raw-loader!../../demo/rating/rating-demo.component.html'),
      ts: require('!raw-loader!../../demo/rating/rating-demo.component.ts'),
    },
    {
      name: 'Tabs',
      directory: 'tabs',
      cmp: TabsDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/tabs/README.md'),
      html: require('!raw-loader!../../demo/tabs/tabs-demo.component.html'),
      ts: require('!raw-loader!../../demo/tabs/tabs-demo.component.ts'),
    },
    {
      name: 'Tooltip',
      directory: 'tooltip',
      cmp: TooltipDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/tooltip/README.md'),
      html: require('!raw-loader!../../demo/tooltip/tooltip-demo.component.html'),
      ts: require('!raw-loader!../../demo/tooltip/tooltip-demo.component.ts'),
    },
    {
      name: 'Popover',
      directory: 'popover',
      cmp: PopoverDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/popover/README.md'),
      html: require('!raw-loader!../../demo/popover/popover-demo.component.html'),
      ts: require('!raw-loader!../../demo/popover/popover-demo.component.ts'),
    },
    {
      name: 'DatePicker',
      directory: 'date-picker',
      cmp: DatePickerDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/date-picker/README.md'),
      html: require('!raw-loader!../../demo/date-picker/date-picker-demo.component.html'),
      ts: require('!raw-loader!../../demo/date-picker/date-picker-demo.component.ts'),
    },
    {
      name: 'Breadcrumbs',
      directory: 'breadcrumbs',
      cmp: BreadcrumbsDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/breadcrumbs/README.md'),
      html: require('!raw-loader!../../demo/breadcrumbs/breadcrumbs-demo.component.html'),
      ts: require('!raw-loader!../../demo/breadcrumbs/breadcrumbs-demo.component.ts'),
    },
    {
      name: 'ProgressBar',
      directory: 'progress-bar',
      cmp: ProgressBarDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/progress-bar/README.md'),
      html: require('!raw-loader!../../demo/progress-bar/progress-bar-demo.component.html'),
      ts: require('!raw-loader!../../demo/progress-bar/progress-bar-demo.component.ts'),
    },
    {
      name: 'SelectButton',
      directory: 'select-button',
      cmp: SelectButtonDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/select-button/README.md'),
      html: require('!raw-loader!../../demo/select-button/select-button-demo.component.html'),
      ts: require('!raw-loader!../../demo/select-button/select-button-demo.component.ts'),
    },
    {
      name: 'Overlay',
      directory: 'select-button',
      cmp: OverlayDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/overlay/README.md'),
      html: require('!raw-loader!../../demo/overlay/overlay-demo.component.html'),
      ts: require('!raw-loader!../../demo/overlay/overlay-demo.component.ts'),
    },
    {
      name: 'Carousel',
      directory: 'carousel',
      cmp: CarouselDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/carousel/README.md'),
      html: require('!raw-loader!../../demo/carousel/carousel-demo.component.html'),
      ts: require('!raw-loader!../../demo/carousel/carousel-demo.component.ts'),
    },
    {
      name: 'Switch',
      directory: 'carousel',
      cmp: SwitchDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/switch/README.md'),
      html: require('!raw-loader!../../demo/switch/switch-demo.component.html'),
      ts: require('!raw-loader!../../demo/switch/switch-demo.component.ts'),
    },
    {
      name: 'MenuBar',
      directory: 'menu-bar',
      cmp: MenuBarDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/menu-bar/README.md'),
      html: require('!raw-loader!../../demo/menu-bar/menu-bar-demo.component.html'),
      ts: require('!raw-loader!../../demo/menu-bar/menu-bar-demo.component.ts'),
    },
    {
      name: 'AutoComplete',
      directory: 'auto-complete',
      cmp: AutoCompleteDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/auto-complete/README.md'),
      html: require('!raw-loader!../../demo/auto-complete/auto-complete-demo.component.html'),
      ts: require('!raw-loader!../../demo/auto-complete/auto-complete-demo.component.ts'),
    },
    {
      name: 'FlowStep',
      directory: 'flow-step',
      cmp: FlowStepDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/flow-step/README.md'),
      html: require('!raw-loader!../../demo/flow-step/flow-step-demo.component.html'),
      ts: require('!raw-loader!../../demo/flow-step/flow-step-demo.component.ts'),
    },
    {
      name: 'InfiniteScroll',
      directory: 'infinite-scroll',
      cmp: InfiniteScrollDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/infinite-scroll/README.md'),
      html: require('!raw-loader!../../demo/infinite-scroll/infinite-scroll-demo.component.html'),
      ts: require('!raw-loader!../../demo/infinite-scroll/infinite-scroll-demo.component.ts'),
    },
    {
      name: 'DataTable',
      directory: 'data-table',
      cmp: DataTableDemoComponent,
      readMe: '',
      html: require('!raw-loader!../../demo/data-table/data-table-demo.component.html'),
      ts: require('!raw-loader!../../demo/data-table/data-table-demo.component.ts'),
    },
    {
      name: 'Draggable',
      directory: 'draggable',
      cmp: DraggableDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/draggable/README.md'),
      html: require('!raw-loader!../../demo/draggable/draggable-demo.component.html'),
      ts: require('!raw-loader!../../demo/draggable/draggable-demo.component.ts'),
    },
    {
      name: 'FileUpload',
      directory: 'file-upload',
      cmp: FileUploadDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/file-upload/README.md'),
      html: require('!raw-loader!../../demo/file-upload/file-upload-demo.component.html'),
      ts: require('!raw-loader!../../demo/file-upload/file-upload-demo.component.ts'),
    },
    {
      name: 'TimePicker',
      directory: 'time-picker',
      cmp: TimePickerDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/time-picker/README.md'),
      html: require('!raw-loader!../../demo/time-picker/time-picker-demo.component.html'),
      ts: require('!raw-loader!../../demo/time-picker/time-picker-demo.component.ts'),
    },

    {
      name: 'RadioGroup',
      directory: 'radio-group',
      cmp: RadioGroupDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/radio-group/README.md'),
      html: require('!raw-loader!../../demo/radio-group/radio-group-demo.component.html'),
      ts: require('!raw-loader!../../demo/radio-group/radio-group-demo.component.ts'),
    },
    {
      name: 'CheckboxGroup',
      directory: 'checkbox-group',
      cmp: CheckboxGroupDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/checkbox-group/README.md'),
      html: require('!raw-loader!../../demo/checkbox-group/checkbox-group-demo.component.html'),
      ts: require('!raw-loader!../../demo/checkbox-group/checkbox-group-demo.component.ts'),
    },
    {
      name: 'Validators',
      directory: 'validators',
      cmp: ValidatorsDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/validators/README.md'),
      html: require('!raw-loader!../../demo/validators/validators-demo.component.html'),
      ts: require('!raw-loader!../../demo/validators/validators-demo.component.ts'),
    },
    {
      name: 'Notify',
      directory: 'notify',
      cmp: NotifyDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/notify/README.md'),
      html: require('!raw-loader!../../demo/notify/notify-demo.component.html'),
      ts: require('!raw-loader!../../demo/notify/notify-demo.component.ts'),
    },
    {
      name: 'TreeView',
      directory: 'tree-view',
      cmp: TreeViewDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/tree-view/README.md'),
      html: require('!raw-loader!../../demo/tree-view/tree-view-demo.component.html'),
      ts: require('!raw-loader!../../demo/tree-view/tree-view-demo.component.ts'),
      data: require('../../demo/tree-view/data.json'),
    },
    {
      name: 'Ellipsis',
      directory: 'ellipsis',
      cmp: EllipsisDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/ellipsis/README.md'),
      html: require('!raw-loader!../../demo/ellipsis/ellipsis-demo.component.html'),
      ts: require('!raw-loader!../../demo/ellipsis/ellipsis-demo.component.ts'),
    },
    {
      name: 'Tags',
      directory: 'tags',
      cmp: TagsDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/tags/README.md'),
      html: require('!raw-loader!../../demo/tags/tags-demo.component.html'),
      ts: require('!raw-loader!../../demo/tags/tags-demo.component.ts'),
    },
    {
      name: 'ImageUpload',
      directory: 'image-upload',
      cmp: ImageUploadDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/image-upload/README.md'),
      html: require('!raw-loader!../../demo/image-upload/image-upload-demo.component.html'),
      ts: require('!raw-loader!../../demo/image-upload/image-upload-demo.component.ts'),
    },
    {
      name: 'Select',
      directory: 'select',
      cmp: SelectDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/select/README.md'),
      html: require('!raw-loader!../../demo/select/select-demo.component.html'),
      ts: require('!raw-loader!../../demo/select/select-demo.component.ts'),
    },
    {
      name: 'Slider',
      directory: 'slider',
      cmp: SliderDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/slider/README.md'),
      html: require('!raw-loader!../../demo/slider/slider-demo.component.html'),
      ts: require('!raw-loader!../../demo/slider/slider-demo.component.ts'),
    },
    {
      name: 'Button',
      directory: 'button',
      cmp: ButtonDemoComponent,
      readMe: '',
      html: require('!raw-loader!../../demo/button/button-demo.component.html'),
      ts: require('!raw-loader!../../demo/button/button-demo.component.ts'),
    },
    {
      name: 'Input',
      directory: 'input',
      cmp: InputDemoComponent,
      readMe: require('!html-loader!markdown-loader!../../demo/input/README.md'),
      html: require('!raw-loader!../../demo/input/input-demo.component.html'),
      ts: require('!raw-loader!../../demo/input/input-demo.component.ts'),
    },
    // component declare
  ];
}
